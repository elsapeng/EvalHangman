
import junit.framework.TestCase;

/**
 * The class <code>EvilHangManTest</code> contains tests for the class {@link
 * <code>EvilHangMan</code>}
 *
 * @pattern JUnit Test Case
 *
 * @generatedBy CodePro at 10/6/15 2:23 PM
 *
 * @author linjie
 *
 * @version $Revision$
 */
public class EvilHangManTest extends TestCase {
	
	EvilHangMan evil;

	/**
	 * Construct new test instance
	 *
	 * @param name the test name
	 */
	public EvilHangManTest(String name) {
		super(name);
	}

	/**
	 * Perform pre-test initialization
	 *
	 * @throws Exception
	 *
	 * @see TestCase#setUp()
	 */
	protected void setUp() throws Exception {
		super.setUp();
		evil = new EvilHangMan(4, 16);
	}
	
	/**
	 * Run the boolean makeGuess(char) method first try
	 */
	public void testMakeGuessFirstTry() {
		// add test code here
		evil.wordlist = new String[] {"ZZZZ", "XXXX"};
		evil.numWords = 2;
		assertFalse(evil.makeGuess('A'));	
		assertFalse(evil.gameOver());
		assertEquals("A", evil.lettersGuessed());
		assertEquals(15, evil.guess);
		assertEquals('A', evil.letterGuess);
		
	}
	
	/**
	 * Run the boolean makeGuess(char) method last try and fail
	 */
	public void testMakeGuessFail() {
		// add test code here
		evil.secretWord = "PSST";
		evil.numWords = 2;
		evil.guess = 1;
		evil.letterGuessHistory = "ABCDEFGHIJKLMNO";
		evil.letterGuess = 0;
		evil.wordlist = new String[] {"ZZZZ", "XXXX"};
		evil.guessResult = false;
		evil.secretStringLength = 4;
		assertFalse(evil.makeGuess('P'));	
		assertTrue(evil.gameOver());
		assertEquals("ABCDEFGHIJKLMNOP", evil.lettersGuessed());
	}
	
	/**
	 * Run the boolean makeGuess(char) method got the character right and changed to normal mode
	 */
	public void testMakeGuessWin() {
		evil.secretWord = "BRRR";
		evil.guess = 6;
		evil.letterGuessHistory = "AEIOUTSYZL";
		evil.letterGuess = 'L';
		evil.wordlist = new String[] {"BRRR"};
		evil.numWords = 1;
		evil.secretStringLength = 4;
		assertTrue(evil.makeGuess('B'));
		assertFalse(evil.gameOver());
		assertEquals("AEIOUTSYZL", evil.lettersGuessed());
		assertEquals(6, evil.guess);
		assertEquals('B', evil.letterGuess);
		
	}
	
	/**
	 * Run the boolean makeGuess(char) method test to test the not letter case
	 */
	public void testMakeGuessNotLetter() {
		// add test code here
		assertFalse(evil.makeGuess('1'));
		assertFalse(evil.gameOver());
		assertEquals("", evil.lettersGuessed());
		assertEquals(16, evil.guess);
		assertEquals('1', evil.letterGuess);
	}
	
	/**
	 * Run the boolean makeGuess(char) method test to test the duplicate case
	 */
	public void testMakeGuessDuplicate() {
		// add test code here
		evil.letterGuessHistory = "A";
		evil.guess = 15;
		assertFalse(evil.makeGuess('A'));
		assertFalse(evil.gameOver());
		assertEquals("A", evil.lettersGuessed());
		assertEquals(15, evil.guess);
		assertEquals('A', evil.letterGuess);
	}
	
	
}

/*$CPS$ This comment was generated by CodePro. Do not edit it.
 * patternId = com.instantiations.assist.eclipse.pattern.testCasePattern
 * strategyId = com.instantiations.assist.eclipse.pattern.testCasePattern.junitTestCase
 * additionalTestNames = 
 * assertTrue = false
 * callTestMethod = true
 * createMain = false
 * createSetUp = true
 * createTearDown = true
 * createTestFixture = false
 * createTestStubs = false
 * methods = makeGuess(C)
 * package = 
 * package.sourceFolder = EvilHangman/src
 * superclassType = junit.framework.TestCase
 * testCase = EvilHangManTest
 * testClassType = EvilHangMan
 */